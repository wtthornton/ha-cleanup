{
  "id": null,
  "title": "Production Data Patterns Dashboard",
  "tags": ["data-patterns", "anomaly-detection", "home-assistant", "ha-ingestor", "production", "prod"],
  "style": "dark",
  "timezone": "browser",
  "refresh": "60s",
  "time": {"from": "now-24h", "to": "now"},
  "panels": [
    {
      "id": 1,
      "title": "Daily Activity Patterns",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 0},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/)\n  |> aggregateWindow(every: 1h, fn: count, createEmpty: false)\n  |> yield(name: \"Hourly Activity\")",
          "refId": "A"
        }
      ]
    },
    {
      "id": 2,
      "title": "Entity State Change Frequency (Last 24h)",
      "type": "heatmap",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/)\n  |> filter(fn: (r) => r[\"_field\"] == \"state\")\n  |> aggregateWindow(every: 2h, fn: count, createEmpty: false)\n  |> group(columns: [\"entity_id\"])\n  |> yield(name: \"Entity State Change Patterns\")",
          "refId": "A"
        }
      ]
    },
    {
      "id": 3,
      "title": "Anomaly Detection - Sensor Values (Last 24h)",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/)\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"_field\"] == \"state\")\n  |> filter(fn: (r) => r[\"state\"] =~ /^[0-9.]+$/)\n  |> map(fn: (r) => ({r with _value: float(v: r.state)}))\n  |> aggregateWindow(every: 1h, fn: mean, createEmpty: false)\n  |> group(columns: [\"entity_id\"])\n  |> yield(name: \"Sensor Value Trends\")",
          "refId": "A"
        }
      ]
    }
  ]
}
