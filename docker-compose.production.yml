version: '3.8'

services:
  ha-cleanup:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: ha-cleanup-app
    ports:
      - "3002:3000"
    environment:
        - NODE_ENV=production
        - INFLUXDB_URL=${INFLUXDB_URL:-http://influxdb:8086}
        - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
        - INFLUXDB_ORG=${INFLUXDB_ORG}
        - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-ha_events}
        - PORT=3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ha-cleanup-network
    volumes:
      - ./logs:/app/logs
    # depends_on:
    #   - influxdb

  # Using existing InfluxDB instance - comment out this service
  # influxdb:
  #   image: influxdb:2.7-alpine
  #   container_name: ha-cleanup-influxdb
  #   ports:
  #     - "8086:8086"
  #   environment:
  #     - DOCKER_INFLUXDB_INIT_MODE=setup
  #     - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER:-admin}
  #     - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-adminpassword}
  #     - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-myorg}
  #     - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-ha_events}
  #     - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
  #   volumes:
  #     - influxdb_data:/var/lib/influxdb2
  #     - influxdb_config:/etc/influxdb2
  #   restart: unless-stopped
  #   networks:
  #     - ha-cleanup-network

  nginx:
    image: nginx:alpine
    container_name: ha-cleanup-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      ha-cleanup:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ha-cleanup-network

  # Optional: Grafana for advanced analytics
  grafana:
    image: grafana/grafana:latest
    container_name: ha-cleanup-grafana
    ports:
      - "3003:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    restart: unless-stopped
    networks:
      - ha-cleanup-network
    # depends_on:
    #   - influxdb

volumes:
  # influxdb_data:
  #   driver: local
  # influxdb_config:
  #   driver: local
  grafana_data:
    driver: local

networks:
  ha-cleanup-network:
    driver: bridge
